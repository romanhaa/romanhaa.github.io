<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roman Hillje - Data Visualization &amp; Bioinformatics</title>
    <link>http://romanhaa.github.io/</link>
    <description>Recent content on Roman Hillje - Data Visualization &amp; Bioinformatics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Roman Hillje - All rights reserved</copyright>
    <lastBuildDate>Thu, 05 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://romanhaa.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cases of coronavirus (ongoing)</title>
      <link>http://romanhaa.github.io/blog/cases_of_coronavirus/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/cases_of_coronavirus/</guid>
      <description>A colleague of mine (hey ðŸ‘‹ @lost_efano) showed me this R package coronavirus which collects data about the virus. I simply couldn&#39;t resist to plot some of the data.</description>
    </item>
    
    <item>
      <title>Animating the dynamics of training a PoincarÃ© map</title>
      <link>http://romanhaa.github.io/blog/dynamics_of_training_a_poincare_map/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/dynamics_of_training_a_poincare_map/</guid>
      <description>Preface Last Friday, I came across an interesting method called &amp;ldquo;PoincarÃ© map&amp;rdquo; to visualize the relationship of cells in single cell RNA-seq data using hyperbolic space.</description>
    </item>
    
    <item>
      <title>Calculate EC50 and plot dose response curve</title>
      <link>http://romanhaa.github.io/blog/dose_response_curve/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/dose_response_curve/</guid>
      <description>Suppose you performed an experiment where you treated cells with different doses of a certain drug and measured how many cells are left alive after a given delay.</description>
    </item>
    
    <item>
      <title>Visualizing health data</title>
      <link>http://romanhaa.github.io/projects/health_data_from_apple_health/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/projects/health_data_from_apple_health/</guid>
      <description>Visualize health data recorded by a Xiaomi Mi Band via export from Apple Health.</description>
    </item>
    
    <item>
      <title>scRNA-seq analysis workflow</title>
      <link>http://romanhaa.github.io/projects/scrnaseq_workflow/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/projects/scrnaseq_workflow/</guid>
      <description>Seurat-based workflow in R which starts from transcript count tables.</description>
    </item>
    
    <item>
      <title>Cerebro</title>
      <link>http://romanhaa.github.io/projects/cerebro/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/projects/cerebro/</guid>
      <description>Interactive visualization of scRNA-seq data.</description>
    </item>
    
    <item>
      <title>Dummy</title>
      <link>http://romanhaa.github.io/plots/dummy/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/dummy/</guid>
      <description>Apparently I need this file to create the plots page&amp;hellip;</description>
    </item>
    
    <item>
      <title>League of Legends players by rank - a simple bar chart with D3.js</title>
      <link>http://romanhaa.github.io/blog/d3js_bar_chart_league_of_legends_ranks/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/d3js_bar_chart_league_of_legends_ranks/</guid>
      <description>Still experimenting with D3.js, this time I wanted to make a simple bar chart. Since it&#39;s always nice to show actual, informative data, I decided to reproduce the distribution of players in the different ranks in League of Legends as shown on this website: https://www.</description>
    </item>
    
    <item>
      <title>Plotting German school holidays with D3.js</title>
      <link>http://romanhaa.github.io/blog/d3js_schulferien_2018_2019/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/d3js_schulferien_2018_2019/</guid>
      <description>Even though I mainly work with R, I wanted to learn some D3.js and recently had the idea to visualize German school holidays by region for the year 2018-19.</description>
    </item>
    
    <item>
      <title>Visualizing resources managed by a PBS job scheduler</title>
      <link>http://romanhaa.github.io/blog/pbsviewer/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/pbsviewer/</guid>
      <description>At the research institute I currently work at, we use PBS as a job scheduler for collaborative use and research management of the HPC cluster. Just for a little background info, the cluster consists of 14 computers which are connected to make the cluster.</description>
    </item>
    
    <item>
      <title>Porting PAGA results from scanpy to R</title>
      <link>http://romanhaa.github.io/blog/paga_to_r/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/blog/paga_to_r/</guid>
      <description>Seurat and scanpy are both great frameworks to analyze single-cell RNA-seq data, the main difference being the language they are designed for. Most of the methods frequently used in the literature are available in both toolkits and the workflow is essentially the same.</description>
    </item>
    
    <item>
      <title>Alluvial plot</title>
      <link>http://romanhaa.github.io/plots/other/alluvial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/other/alluvial/</guid>
      <description>library(tidyverse) library(ggalluvial) states_all # A tibble: 13,168,874 x 5 # bin `SD 3m` `SD 6m` `SD 12m` `CR 12m` # &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; # 1 chr1:0-200 8 8 8 8 # 2 chr1:200-400 8 8 8 8 # 3 chr1:400-600 8 8 8 8 # 4 chr1:600-800 8 8 8 8 # 5 chr1:800-1000 8 8 8 8 # 6 chr1:1000-1200 8 8 8 8 # 7 chr1:1200-1400 8 8 8 8 # 8 chr1:1400-1600 8 8 8 8 # 9 chr1:1600-1800 8 8 8 8 # 10 chr1:1800-2000 8 8 8 8 # â€¦ with 13,168,864 more rows state_transition_lodes &amp;lt;- states_all %&amp;gt;% group_by(`SD 3m`, `SD 12m`, `CR 12m`) %&amp;gt;% tally() %&amp;gt;% ungroup() %&amp;gt;% mutate( `SD 3m` = factor(`SD 3m`, levels = c(&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;,&amp;#39;4&amp;#39;,&amp;#39;5&amp;#39;,&amp;#39;6&amp;#39;,&amp;#39;7&amp;#39;,&amp;#39;8&amp;#39;)), `SD 12m` = factor(`SD 12m`, levels = c(&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;,&amp;#39;4&amp;#39;,&amp;#39;5&amp;#39;,&amp;#39;6&amp;#39;,&amp;#39;7&amp;#39;,&amp;#39;8&amp;#39;)), `CR 12m` = factor(`CR 12m`, levels = c(&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;,&amp;#39;4&amp;#39;,&amp;#39;5&amp;#39;,&amp;#39;6&amp;#39;,&amp;#39;7&amp;#39;,&amp;#39;8&amp;#39;)), alpha = ifelse((`SD 3m` == `SD 12m` &amp;amp; `SD 3m` == `CR 12m`), 0, 0.</description>
    </item>
    
    <item>
      <title>Distribution plot 1</title>
      <link>http://romanhaa.github.io/plots/distributions/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/distributions/1/</guid>
      <description>library(tidyverse) library(wesanderson) data(iris) p &amp;lt;- ggplot(iris) + geom_jitter(aes(Species, Sepal.Width, color = Species), alpha = 0.75, size = 3, show.legend = FALSE) + geom_violin(aes(Species, Sepal.Width, fill = Species), alpha = 0.</description>
    </item>
    
    <item>
      <title>Distribution plot 2</title>
      <link>http://romanhaa.github.io/plots/distributions/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/distributions/2/</guid>
      <description>library(tidyverse) library(gghalves) library(wesanderson) data(iris) p &amp;lt;- ggplot(iris) + geom_jitter(aes(Species, Sepal.Length, color = Species), alpha = 0.75, size = 3, show.legend = FALSE) + gghalves::geom_half_violin(aes(Species, Sepal.Length, fill = Species), side = &amp;#39;l&amp;#39;, alpha = 0.</description>
    </item>
    
    <item>
      <title>Dose-response curve</title>
      <link>http://romanhaa.github.io/plots/other/dose_response_curve/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/other/dose_response_curve/</guid>
      <description>The code for this plot can be found in this blog post.</description>
    </item>
    
    <item>
      <title>Dot plot</title>
      <link>http://romanhaa.github.io/plots/other/dot_plot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/other/dot_plot/</guid>
      <description>More context (and code) for this plot can be found in my scRNA-seq workflow in the chapter &amp;ldquo;Expression of individual genes&amp;rdquo;.
library(tidyverse) library(Seurat) # load a single cell expression data set (generated in the lab I work at) seurat &amp;lt;- readRDS(&amp;#39;seurat.</description>
    </item>
    
    <item>
      <title>Gene set enrichment results</title>
      <link>http://romanhaa.github.io/plots/bar/gsva_hallmark_gene_sets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/bar/gsva_hallmark_gene_sets/</guid>
      <description>Context and code for this plot can be found in my scRNA-seq workflow in the chapter &amp;ldquo;Gene set enrichment analysis&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Heatmap 1</title>
      <link>http://romanhaa.github.io/plots/heatmap/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/heatmap/1/</guid>
      <description>library(tidyverse) library(Seurat) library(ComplexHeatmap) library(circlize) library(gridExtra) library(ggplotify) # create color palette from flatuicolors.com colors_dutch &amp;lt;- c( &amp;#39;#FFC312&amp;#39;,&amp;#39;#C4E538&amp;#39;,&amp;#39;#12CBC4&amp;#39;,&amp;#39;#FDA7DF&amp;#39;,&amp;#39;#ED4C67&amp;#39;, &amp;#39;#F79F1F&amp;#39;,&amp;#39;#A3CB38&amp;#39;,&amp;#39;#1289A7&amp;#39;,&amp;#39;#D980FA&amp;#39;,&amp;#39;#B53471&amp;#39;, &amp;#39;#EE5A24&amp;#39;,&amp;#39;#009432&amp;#39;,&amp;#39;#0652DD&amp;#39;,&amp;#39;#9980FA&amp;#39;,&amp;#39;#833471&amp;#39;, &amp;#39;#EA2027&amp;#39;,&amp;#39;#006266&amp;#39;,&amp;#39;#1B1464&amp;#39;,&amp;#39;#5758BB&amp;#39;,&amp;#39;#6F1E51&amp;#39; ) colors_spanish &amp;lt;- c( &amp;#39;#40407a&amp;#39;,&amp;#39;#706fd3&amp;#39;,&amp;#39;#f7f1e3&amp;#39;,&amp;#39;#34ace0&amp;#39;,&amp;#39;#33d9b2&amp;#39;, &amp;#39;#2c2c54&amp;#39;,&amp;#39;#474787&amp;#39;,&amp;#39;#aaa69d&amp;#39;,&amp;#39;#227093&amp;#39;,&amp;#39;#218c74&amp;#39;, &amp;#39;#ff5252&amp;#39;,&amp;#39;#ff793f&amp;#39;,&amp;#39;#d1ccc0&amp;#39;,&amp;#39;#ffb142&amp;#39;,&amp;#39;#ffda79&amp;#39;, &amp;#39;#b33939&amp;#39;,&amp;#39;#cd6133&amp;#39;,&amp;#39;#84817a&amp;#39;,&amp;#39;#cc8e35&amp;#39;,&amp;#39;#ccae62&amp;#39; ) custom_colors &amp;lt;- c(colors_dutch, colors_spanish) # load a single cell expression data set (generated in the lab I work at) seurat &amp;lt;- readRDS(&amp;#39;seurat.</description>
    </item>
    
    <item>
      <title>Intensity plot 1</title>
      <link>http://romanhaa.github.io/plots/intensity/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/intensity/1/</guid>
      <description>library(tidyverse) library(wesanderson) data(iris) p &amp;lt;- ggplot(iris) + stat_density_2d(aes(Sepal.Length, Sepal.Width, fill = stat(level)), geom = &amp;#39;polygon&amp;#39;) + theme_bw() + labs(x = &amp;#39;Sepal length&amp;#39;, y = &amp;#39;Sepal width&amp;#39;, size = &amp;#39;Petal width&amp;#39;) + scale_fill_gradientn( colours = wes_palette(&amp;#39;Zissou1&amp;#39;, 21, type = &amp;#39;continuous&amp;#39;), guide = guide_colorbar(frame.</description>
    </item>
    
    <item>
      <title>Intensity plot 2</title>
      <link>http://romanhaa.github.io/plots/intensity/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/intensity/2/</guid>
      <description>library(tidyverse) library(viridis) n &amp;lt;- 15000 data &amp;lt;- bind_rows( tibble(x = rnorm(n, 5, 2), y = rnorm(n, 7.5, 4)), tibble(x = rnorm(n, 10, 3), y = rnorm(n, 2.</description>
    </item>
    
    <item>
      <title>Map of Trieste</title>
      <link>http://romanhaa.github.io/plots/geographical/trieste_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/geographical/trieste_1/</guid>
      <description>Light version library(sf) library(foreign) library(tidyverse) library(lwgeom) library(stringi) options(stringsAsFactors = FALSE) # download SHP files for region, e.g. from Geofabrik # http://download.geofabrik.de/europe/italy/nord-est.html buildings_a &amp;lt;- read_sf(&amp;#39;gis_osm_buildings_a_free_1.shp&amp;#39;) landuse_a &amp;lt;- read_sf(&amp;#39;gis_osm_landuse_a_free_1.</description>
    </item>
    
    <item>
      <title>Phylogenetic tree</title>
      <link>http://romanhaa.github.io/plots/other/phylogenetic_tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/other/phylogenetic_tree/</guid>
      <description>library(tidyverse) library(jcolors) library(ggtree) # load data data(mtcars) # choose number of carburetors as group groups &amp;lt;- mtcars$carb %&amp;gt;% as.character() %&amp;gt;% unique() %&amp;gt;% sort() # group data by carburetor and calculate means for all features temp_data &amp;lt;- mtcars %&amp;gt;% group_by(carb) %&amp;gt;% summarise_all(list(mean = mean)) %&amp;gt;% as.</description>
    </item>
    
    <item>
      <title>Scatter plot 1</title>
      <link>http://romanhaa.github.io/plots/scatter/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/scatter/1/</guid>
      <description>library(tidyverse) data(iris) p &amp;lt;- iris %&amp;gt;% mutate(Petal.Width.larger = Petal.Width * 1.5) %&amp;gt;% ggplot() + geom_point(aes(Sepal.Length, Sepal.Width, size = Petal.Width.larger), color = &amp;#39;black&amp;#39;, show.legend = FALSE) + geom_point(aes(Sepal.</description>
    </item>
    
    <item>
      <title>Scatter plot 2</title>
      <link>http://romanhaa.github.io/plots/scatter/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/scatter/2/</guid>
      <description>library(tidyverse) library(MASS) # download differential expression data from EBI Expression Atlas database # https://www.ebi.ac.uk/gxa/experiments/E-MTAB-7445/Results t &amp;lt;- read_tsv(&amp;#39;E-MTAB-7445-query-results.tsv&amp;#39;, skip = 3) %&amp;gt;% rename( gene_id = 1, gene_name = 2, comparison_1_fold_change = 3, comparison_1_p_value = 4, comparison_2_fold_change = 5, comparison_2_p_value = 6 ) # filter genes which have p-values lower than 0.</description>
    </item>
    
    <item>
      <title>Scatter plot 3</title>
      <link>http://romanhaa.github.io/plots/scatter/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/scatter/3/</guid>
      <description>library(tidyverse) library(Seurat) # create color palette from flatuicolors.com colors_dutch &amp;lt;- c( &amp;#39;#FFC312&amp;#39;,&amp;#39;#C4E538&amp;#39;,&amp;#39;#12CBC4&amp;#39;,&amp;#39;#FDA7DF&amp;#39;,&amp;#39;#ED4C67&amp;#39;, &amp;#39;#F79F1F&amp;#39;,&amp;#39;#A3CB38&amp;#39;,&amp;#39;#1289A7&amp;#39;,&amp;#39;#D980FA&amp;#39;,&amp;#39;#B53471&amp;#39;, &amp;#39;#EE5A24&amp;#39;,&amp;#39;#009432&amp;#39;,&amp;#39;#0652DD&amp;#39;,&amp;#39;#9980FA&amp;#39;,&amp;#39;#833471&amp;#39;, &amp;#39;#EA2027&amp;#39;,&amp;#39;#006266&amp;#39;,&amp;#39;#1B1464&amp;#39;,&amp;#39;#5758BB&amp;#39;,&amp;#39;#6F1E51&amp;#39; ) colors_spanish &amp;lt;- c( &amp;#39;#40407a&amp;#39;,&amp;#39;#706fd3&amp;#39;,&amp;#39;#f7f1e3&amp;#39;,&amp;#39;#34ace0&amp;#39;,&amp;#39;#33d9b2&amp;#39;, &amp;#39;#2c2c54&amp;#39;,&amp;#39;#474787&amp;#39;,&amp;#39;#aaa69d&amp;#39;,&amp;#39;#227093&amp;#39;,&amp;#39;#218c74&amp;#39;, &amp;#39;#ff5252&amp;#39;,&amp;#39;#ff793f&amp;#39;,&amp;#39;#d1ccc0&amp;#39;,&amp;#39;#ffb142&amp;#39;,&amp;#39;#ffda79&amp;#39;, &amp;#39;#b33939&amp;#39;,&amp;#39;#cd6133&amp;#39;,&amp;#39;#84817a&amp;#39;,&amp;#39;#cc8e35&amp;#39;,&amp;#39;#ccae62&amp;#39; ) custom_colors &amp;lt;- c(colors_dutch, colors_spanish) # load a single cell expression data set (generated in the lab I work at) seurat &amp;lt;- readRDS(&amp;#39;seurat.</description>
    </item>
    
    <item>
      <title>Scatter plot 4</title>
      <link>http://romanhaa.github.io/plots/scatter/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/scatter/4/</guid>
      <description>library(tidyverse) data(iris) correlation_pearson &amp;lt;- cor(iris$Sepal.Length, iris$Petal.Length, method = &amp;#39;pearson&amp;#39;) correlation_spearman &amp;lt;- cor(iris$Sepal.Length, iris$Petal.Length, method = &amp;#39;spearman&amp;#39;) label &amp;lt;- list( paste0(&amp;#39;Pearson~italic(R)^2 == &amp;#39;, round(correlation_pearson, 3)), paste0(&amp;#39;Spearman~italic(R)^2 == &amp;#39;, round(correlation_spearman, 3)) ) p &amp;lt;- iris %&amp;gt;% mutate(Petal.</description>
    </item>
    
    <item>
      <title>Scatter plot 5</title>
      <link>http://romanhaa.github.io/plots/scatter/5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/scatter/5/</guid>
      <description>library(tidyverse) library(ggExtra) library(MASS) library(viridis) cells &amp;lt;- tibble( cell = colnames(transcripts$raw$merged), nCount = colSums(transcripts$raw$merged), nFeature = colSums(transcripts$raw$merged != 0) ) cells %&amp;gt;% glimpse() # Observations: 6,000 # Variables: 3 # $ cell &amp;lt;chr&amp;gt; &amp;#34;TGCCCATGTGTTCGAT-A&amp;#34;, &amp;#34;ACGGCCACAAGAAGAG-A&amp;#34;, &amp;#34;CTGTGCTGTCAGAAGâ€¦ # $ nCount &amp;lt;dbl&amp;gt; 5784, 6037, 4655, 42398, 14765, 4621, 14368, 4570, 6635, 113â€¦ # $ nFeature &amp;lt;dbl&amp;gt; 1655, 1397, 1300, 5387, 2548, 295, 2929, 1056, 1720, 638, 27â€¦ # calculate density of dots as described on: # https://slowkow.</description>
    </item>
    
    <item>
      <title>Showing compositions in a bar plot</title>
      <link>http://romanhaa.github.io/plots/bar/flights_by_airport_and_carrier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/bar/flights_by_airport_and_carrier/</guid>
      <description>library(tidyverse) library(patchwork) library(plyr) library(nycflights13) colors_dutch &amp;lt;- c( &amp;#39;#FFC312&amp;#39;,&amp;#39;#C4E538&amp;#39;,&amp;#39;#12CBC4&amp;#39;,&amp;#39;#FDA7DF&amp;#39;,&amp;#39;#ED4C67&amp;#39;, &amp;#39;#F79F1F&amp;#39;,&amp;#39;#A3CB38&amp;#39;,&amp;#39;#1289A7&amp;#39;,&amp;#39;#D980FA&amp;#39;,&amp;#39;#B53471&amp;#39;, &amp;#39;#EE5A24&amp;#39;,&amp;#39;#009432&amp;#39;,&amp;#39;#0652DD&amp;#39;,&amp;#39;#9980FA&amp;#39;,&amp;#39;#833471&amp;#39;, &amp;#39;#EA2027&amp;#39;,&amp;#39;#006266&amp;#39;,&amp;#39;#1B1464&amp;#39;,&amp;#39;#5758BB&amp;#39;,&amp;#39;#6F1E51&amp;#39; ) colors_spanish &amp;lt;- c( &amp;#39;#40407a&amp;#39;,&amp;#39;#706fd3&amp;#39;,&amp;#39;#f7f1e3&amp;#39;,&amp;#39;#34ace0&amp;#39;,&amp;#39;#33d9b2&amp;#39;, &amp;#39;#2c2c54&amp;#39;,&amp;#39;#474787&amp;#39;,&amp;#39;#aaa69d&amp;#39;,&amp;#39;#227093&amp;#39;,&amp;#39;#218c74&amp;#39;, &amp;#39;#ff5252&amp;#39;,&amp;#39;#ff793f&amp;#39;,&amp;#39;#d1ccc0&amp;#39;,&amp;#39;#ffb142&amp;#39;,&amp;#39;#ffda79&amp;#39;, &amp;#39;#b33939&amp;#39;,&amp;#39;#cd6133&amp;#39;,&amp;#39;#84817a&amp;#39;,&amp;#39;#cc8e35&amp;#39;,&amp;#39;#ccae62&amp;#39; ) custom_colors &amp;lt;- c(colors_dutch, colors_spanish) data(flights) t &amp;lt;- flights %&amp;gt;% dplyr::select(origin, carrier) %&amp;gt;% group_by(origin, carrier) %&amp;gt;% tally() %&amp;gt;% ungroup() %&amp;gt;% filter(n &amp;gt; 2000) %&amp;gt;% mutate(carrier = factor(carrier, levels = carrier %&amp;gt;% unique() %&amp;gt;% sort())) t_labels_number &amp;lt;- t %&amp;gt;% mutate(carrier = as.</description>
    </item>
    
    <item>
      <title>Time zones</title>
      <link>http://romanhaa.github.io/plots/geographical/time_zones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/geographical/time_zones/</guid>
      <description>library(tidyverse) library(sf) library(lwgeom) library(patchwork) library(wesanderson) blankbg &amp;lt;- theme( axis.line = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.</description>
    </item>
    
    <item>
      <title>World map</title>
      <link>http://romanhaa.github.io/plots/geographical/world_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://romanhaa.github.io/plots/geographical/world_1/</guid>
      <description>library(tidyverse) library(cowplot) library(sf) library(lwgeom) library(rworldmap) world_sf &amp;lt;- st_as_sf(getMap(resolution = &amp;#34;low&amp;#34;)) crs_wintri &amp;lt;- &amp;#34;+proj=wintri +datum=WGS84 +no_defs +over&amp;#34; world_wintri &amp;lt;- st_transform_proj(world_sf, crs = crs_wintri) # we will highlight the countries from which people attended our event countries_to_highlight &amp;lt;- c( &amp;#39;Austria&amp;#39;, &amp;#39;Bosnia and Herzegovina&amp;#39;, &amp;#39;China&amp;#39;, &amp;#39;Colombia&amp;#39;, &amp;#39;Croatia&amp;#39;, &amp;#39;Czech Republic&amp;#39;, &amp;#39;Denmark&amp;#39;, &amp;#39;France&amp;#39;, &amp;#39;Germany&amp;#39;, &amp;#39;Greece&amp;#39;, &amp;#39;India&amp;#39;, &amp;#39;Indonesia&amp;#39;, &amp;#39;Iran&amp;#39;, &amp;#39;Ireland&amp;#39;, &amp;#39;Israel&amp;#39;, &amp;#39;Italy&amp;#39;, &amp;#39;Mexico&amp;#39;, &amp;#39;Netherlands&amp;#39;, &amp;#39;Nigeria&amp;#39;, &amp;#39;Poland&amp;#39;, &amp;#39;Romania&amp;#39;, &amp;#39;Russia&amp;#39;, &amp;#39;Serbia&amp;#39;, &amp;#39;Spain&amp;#39;, &amp;#39;Sweden&amp;#39;, &amp;#39;Switzerland&amp;#39;, &amp;#39;UK&amp;#39; ) plot_data &amp;lt;- world_wintri %&amp;gt;% mutate(highlight = NAME %in% countries_to_highlight) grat_wintri &amp;lt;- st_graticule(lat = c(-89.</description>
    </item>
    
  </channel>
</rss>